--------- JavaScript - Dynamically Programming Language ------------

    1. NODE JS : It Provides runtime environment for JS
    2. There is no user input predefined methods.so we need to import a library in js prompt-sync from npm.
        and import this library to our code using this command:

        if we enter a value through prompt-sync the value is converted into a string.

              **************            const prompt=require('prompt-sync')({sigint:true})    *****************
    
    3. Basic Concepts in JS
        - Display content : console.log(content)
        - Data types in JS : use typeof
            - string
            - number 
            - boolean
        - Identifiers : set of rules for setting Variable name
        - Variables : used to store values
            - var keyword
            - const keyword
            - let keyword
        - Hoisting : moving declarations to the top.
        - Difference between var , const and let keywords
        ----------var--------  -----------const-------------  ----------let----------------
        1. use var keyword          use const keyword           use let keyword
        2. can reassign value       cannot reassign value       can reassign value
        3. Global scope             Block scope                 Block scope
        4. Hoisted with undefined   Hoisted without value       Hoisted without value
        - Combinig diffrenet types of data in JS
            - using commas
            - using + (concantenation) : it convert the content into string
            - using `(back tick - template literals) 
        - Operators in JS
            - Assignment Operators : =
            - Arithmetic Operators : + - * / % ** return a number
            - Relational Operators : > >= < <= == != === it returns boolean 
            - Logical Operators : && || ! 
                        &&              ||              !
                    T && T = T      T || T = T         !T = F
                    T && F = F      T || F = T         !F = T
                    F && T = F      F || T = T
                    F && F = F      F || F = F 
            - Increment/Decremnt Operators : ++ / -- 
            - ShortHand Operators : += -= *= 
            - Ternary Operators : condition? Statements executed when it become true:Statements executed when it become false
            - Truthy Operators : condition &&  Statements executed when it become true

           Descision Making Statements/Conditional
             - if Statements
                 - syntax: if(condition)
                           {
                              Statements executed when it become true
                           }
              
             - if-else Statements
                 - Syntax:  if(condition)
                            {
                              Statements executed when it become true
                            } 
                            else
                            {
                              Statements executed when it become false
                            }
            - else if ladder : Multiple condition are checking
            -switch : switch(condition)
            {
                case ans1: step,break;
            }

            -Looping Statements: used to execute same task in multiple times.
            while Loop
               - syntax: 1: Initialise a Variable
                         2: while(condition using the same variable) 
                            {
                                loop body execute when condition is true
                             
                         3: Change variable that used in the while condition 
                            }
             -for loop
        
                




